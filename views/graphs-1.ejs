<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cryptocurrency Price Visualization</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        canvas {
            width: 100%;
            height: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="mt-5 mb-4 text-center">Cryptocurrency Price Visualization</h1>
        <div class="row">
            <div class="col-md-4">
                <canvas id="btcChart"></canvas>
            </div>
            <div class="col-md-4">
                <canvas id="ethChart"></canvas>
            </div>
            <div class="col-md-4">
                <canvas id="bnbChart"></canvas>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const fetchAndRenderChart = (coin, chartId, label) => {
                fetch(`https://api.coingecko.com/api/v3/coins/${coin}/market_chart?vs_currency=usd&days=30`)
                    .then(response => response.json())
                    .then(data => {
                        const prices = data.prices.map(entry => ({
                            timestamp: entry[0],
                            price: entry[1]
                        }));
                        const timestamps = prices.map(entry => new Date(entry.timestamp).toLocaleDateString());
                        const pricesData = prices.map(entry => entry.price);

                        const ctx = document.getElementById(chartId).getContext('2d');
                        new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: timestamps,
                                datasets: [{
                                    label: `${label} Price (USD)`,
                                    data: pricesData,
                                    borderColor: 'rgb(75, 192, 192)',
                                    tension: 0.1
                                }]
                            },
                            options: {
                                scales: {
                                    x: {
                                        display: true,
                                        title: {
                                            display: true,
                                            text: 'Date'
                                        }
                                    },
                                    y: {
                                        display: true,
                                        title: {
                                            display: true,
                                            text: 'Price (USD)'
                                        }
                                    }
                                }
                            }
                        });
                    })
                    .catch(error => console.error('Error fetching data:', error));
            };

            fetchAndRenderChart('bitcoin', 'btcChart', 'Bitcoin');
            fetchAndRenderChart('ethereum', 'ethChart', 'Ethereum');
            fetchAndRenderChart('binancecoin', 'bnbChart', 'Binance Coin');
        });
    </script>
</body>
</html>
